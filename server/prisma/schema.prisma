// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid()) @db.Uuid
  email           String     @unique
  password        String
  firstName       String?
  lastName        String?
  image           String?
  profileSetup    Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // Relations
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  // Channel relations
  channels        Channel[]  @relation("ChannelMembers")
  adminChannels   Channel[]  @relation("ChannelAdmin")
}

model Message {
  id           String    @id @default(uuid()) @db.Uuid
  senderId     String    @db.Uuid
  recipientId  String?   @db.Uuid
  content      String
  senderName   String?
  timeStamp    DateTime  @default(now())

  sender       User      @relation("SentMessages", fields: [senderId], references: [id])
  recipient    User?     @relation("ReceivedMessages", fields: [recipientId], references: [id])

  channelId    String?   @db.Uuid
  channel      Channel?  @relation("ChannelMessages", fields: [channelId], references: [id])
}

model Channel {
  id         String     @id @default(uuid()) @db.Uuid
  name       String

  members    User[]     @relation("ChannelMembers")

  adminId    String     @db.Uuid
  admin      User       @relation("ChannelAdmin", fields: [adminId], references: [id])

  messages   Message[]  @relation("ChannelMessages")

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

